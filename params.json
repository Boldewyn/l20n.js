{"note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"L20n implementation in JavaScript","body":"The JavaScript implementation of [L20n][].  The parser, the compiler, the L20n context, plus HTML bindings to make them work on the web.\r\n\r\nWith L20n, we want to reinvent the way we're doing software localization. Users should be able to benefit from the entire expressive power of their languages.\r\n\r\nL20n keeps simple things simple, and at the same time makes complex things possible.\r\n\r\nA straight-forward example in English:\r\n\r\n    <brandName \"Firefox\">\r\n    <about \"About {{ brandName }}\">\r\n\r\nAnd the same thing in Polish:\r\n\r\n    <brandName {\r\n      nominative: \"Firefox\",\r\n      genitive: \"Firefoksa\",\r\n      dative: \"Firefoksowi\",\r\n      accusative: \"Firefoksa\",\r\n      instrumental: \"Firefoksem\",\r\n      locative: \"Firefoksie\"\r\n    }>\r\n    <about \"O {{ brandName.locative }}\">\r\n\r\nThe API:\r\n\r\n    var ctx = L20n.getContext();\r\n    ctx.addResource('./locales/en-US/strings.lol');\r\n    ctx.freeze();\r\n\r\nAnd lastly:\r\n\r\n    document.addEventListener('LocalizationReady', function() {\r\n      var msg = ctx.get('about');\r\n      alert(msg);\r\n    });\r\n\r\nOr...\r\n\r\n    ctx.get('about', null, function(msg) {\r\n      // `msg` is the value of the string returned by the context \r\n      // when all the LOL resources have been downloaded\r\n      alert(msg);\r\n    }, 'Default fallback');\r\n\r\n\r\n[L20n]: https://wiki.mozilla.org/L20n\r\n\r\n","name":"L20n.js","google":""}